{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/Users/mike/Desktop/kickStart_ETH/pages/campaigns/show.js\";\nimport React, { Component } from 'react';\nimport { Card } from 'semantic-ui-react';\nimport Layout from '../../components/layout';\nimport Campaign from '../../ethereum/campaigns';\n\nclass CampaignShow extends Component {\n  static async getInitialProps(props) {\n    const campaign = Campaign(props.query.address);\n    const summary = await campaign.methods.getSummary().call();\n    return {\n      minimumContribution: summary[0],\n      balance: summary[1],\n      requestCount: summary[2],\n      approversCount: summary[3],\n      managerAddress: summary[4]\n    };\n  }\n\n  renderCards() {\n    const {\n      minimumContribution,\n      balance,\n      requestCount,\n      approversCount,\n      managerAddress\n    } = this.props;\n    const items = [{\n      header: manager,\n      meta: 'Address of Manager',\n      description: 'The Manager created this campaign and can create requests to withdraw money'\n    }];\n    return /*#__PURE__*/_jsxDEV(Card.Group, {\n      items: items\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 16\n    }, this);\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(Layout, {\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        children: \"Campaign show\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 13\n    }, this);\n  }\n\n}\n\n;\nexport default CampaignShow;","map":{"version":3,"sources":["/Users/mike/Desktop/kickStart_ETH/pages/campaigns/show.js"],"names":["React","Component","Card","Layout","Campaign","CampaignShow","getInitialProps","props","campaign","query","address","summary","methods","getSummary","call","minimumContribution","balance","requestCount","approversCount","managerAddress","renderCards","items","header","manager","meta","description","render"],"mappings":";;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAgC,OAAhC;AACA,SAASC,IAAT,QAAqB,mBAArB;AACA,OAAOC,MAAP,MAAmB,yBAAnB;AACA,OAAOC,QAAP,MAAqB,0BAArB;;AAEA,MAAMC,YAAN,SAA2BJ,SAA3B,CAAqC;AACjC,eAAaK,eAAb,CAA6BC,KAA7B,EAAmC;AAC/B,UAAMC,QAAQ,GAAGJ,QAAQ,CAACG,KAAK,CAACE,KAAN,CAAYC,OAAb,CAAzB;AACA,UAAMC,OAAO,GAAG,MAAMH,QAAQ,CAACI,OAAT,CAAiBC,UAAjB,GAA8BC,IAA9B,EAAtB;AAEA,WAAO;AACHC,MAAAA,mBAAmB,EAAEJ,OAAO,CAAC,CAAD,CADzB;AAEHK,MAAAA,OAAO,EAAEL,OAAO,CAAC,CAAD,CAFb;AAGHM,MAAAA,YAAY,EAAEN,OAAO,CAAC,CAAD,CAHlB;AAIHO,MAAAA,cAAc,EAAEP,OAAO,CAAC,CAAD,CAJpB;AAKHQ,MAAAA,cAAc,EAAER,OAAO,CAAC,CAAD;AALpB,KAAP;AAOH;;AAEDS,EAAAA,WAAW,GAAE;AACT,UAAM;AACFL,MAAAA,mBADE;AAEFC,MAAAA,OAFE;AAGFC,MAAAA,YAHE;AAIFC,MAAAA,cAJE;AAKFC,MAAAA;AALE,QAMF,KAAKZ,KANT;AAQC,UAAMc,KAAK,GAAG,CACV;AACAC,MAAAA,MAAM,EAAEC,OADR;AAEAC,MAAAA,IAAI,EAAE,oBAFN;AAGAC,MAAAA,WAAW,EAAE;AAHb,KADU,CAAd;AAQD,wBAAO,QAAC,IAAD,CAAM,KAAN;AAAY,MAAA,KAAK,EAAEJ;AAAnB;AAAA;AAAA;AAAA;AAAA,YAAP;AACH;;AAQDK,EAAAA,MAAM,GAAE;AACJ,wBACI,QAAC,MAAD;AAAA,6BACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,YADJ;AAKH;;AA9CgC;;AA+CpC;AAED,eAAerB,YAAf","sourcesContent":["import React, { Component} from 'react';\nimport { Card } from 'semantic-ui-react';\nimport Layout from '../../components/layout';\nimport Campaign from '../../ethereum/campaigns';\n\nclass CampaignShow extends Component { \n    static async getInitialProps(props){\n        const campaign = Campaign(props.query.address);\n        const summary = await campaign.methods.getSummary().call();\n        \n        return {\n            minimumContribution: summary[0],\n            balance: summary[1],\n            requestCount: summary[2],\n            approversCount: summary[3],\n            managerAddress: summary[4],\n        };\n    };\n\n    renderCards(){\n        const {\n            minimumContribution,\n            balance,\n            requestCount,\n            approversCount,\n            managerAddress\n        } = this.props\n\n         const items = [\n             {\n             header: manager,\n             meta: 'Address of Manager',\n             description: 'The Manager created this campaign and can create requests to withdraw money'\n            }\n        ];\n        \n        return <Card.Group items={items}/>;\n    };\n\n    \n\n  \n\n    \n\n    render(){\n        return(\n            <Layout>\n                <div>Campaign show</div>\n            </Layout>\n        );\n    };\n};\n\nexport default CampaignShow;"]},"metadata":{},"sourceType":"module"}